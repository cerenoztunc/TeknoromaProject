@model CategoryDto
@{
    ViewData["Title"] = "ProductListReport";
    Layout = "~/Areas/Manager/Views/Shared/_Layout.cshtml";
}

<section class="panel">
    <header class="panel-heading">
        DataTables hidden row details example
    </header>
    <div class="panel-body">
        <div class="adv-table">
            <table cellpadding="0" cellspacing="0" border="0" class="display table table-bordered" id="hidden-table-info">
                <thead>
                    <tr>
                        <th>Kategori ID</th>
                        <th>Kategori Ismi</th>
                        <th class="hidden-phone">Kategori Acıklaması</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (Category item in Model.Categories)
                    {
                        <tr class="gradeU">
                            <td>@item.Id</td>
                            <td>@item.CategoryName</td>
                            <td class="hidden-phone">@item.Description</td>
                        </tr>
                     }
                </tbody>
            </table>
        </div>
    </div>
</section>

<script>
    /* Formating function for row details */
    function fnFormatDetails(oTable, nTr) {
        let aData = oTable.fnGetData(nTr);
        let sOut = '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">';
        sOut += '<tr><td>Aktif Ürünleri:</td><td> <a title="Icerik" href="/Manager/Category/GetProducts/' + aData[1] + '">' + aData[2] + ' Kategorisi Ürünleri </a>     </td></tr>';
        sOut += '<tr><td>Pasif Ürünler:</td><td><a title="Detay" href="/Manager/Category/GetPassiveProducts/' + aData[1] + '">' + aData[2] + ' Kategorisinin Satışı Olmayan Ürünleri</a> </td></tr>';
        sOut += '<tr><td>Ürün Ekleme:</td><td><a href="/Manager/Product/CreateProduct" class="btn btn-primary"> Ürün Ekle </a></td></tr>';
        sOut += '</table>';

        return sOut;
    }


    $(document).ready(function () {
        /*
         * Insert a 'details' column to the table
         */
        let nCloneTh = document.createElement('th');
        let nCloneTd = document.createElement('td');
        nCloneTd.innerHTML = '<img src="/flatlab/assets/advanced-datatable/examples/examples_support/details_open.png">';
        nCloneTd.className = "center";

        $('#hidden-table-info thead tr').each(function () {
            this.insertBefore(nCloneTh, this.childNodes[0]);
        });

        $('#hidden-table-info tbody tr').each(function () {
            this.insertBefore(nCloneTd.cloneNode(true), this.childNodes[0]);
        });

        /*
         * Initialse DataTables, with no sorting on the 'details' column
         */
        let oTable = $('#hidden-table-info').dataTable({
            "aoColumnDefs": [
                { "bSortable": false, "aTargets": [0] }
            ],
            "aaSorting": [[1, 'asc']]
        });

        /* Add event listener for opening and closing details
         * Note that the indicator for showing which row is open is not controlled by DataTables,
         * rather it is done here
         */
        $('#hidden-table-info tbody td img').live('click', function () {
            let nTr = $(this).parents('tr')[0];
            if (oTable.fnIsOpen(nTr)) {
                /* This row is already open - close it */
                this.src = "/flatlab/assets/advanced-datatable/examples/examples_support/details_open.png";
                oTable.fnClose(nTr);
            }
            else {
                /* Open this row */
                this.src = "/flatlab/assets/advanced-datatable/examples/examples_support/details_close.png";
                oTable.fnOpen(nTr, fnFormatDetails(oTable, nTr), 'details');
            }
        });
    });


</script>
